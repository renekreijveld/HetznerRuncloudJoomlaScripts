#!/bin/bash
  
# remotesitesbackup -- Find Joomla instances and backup these to a Hetzner Storage Box
# See also: https://www.hetzner.de/storage-box
# 
# Supports Joomla versions 2.5 - 3.x
#
# Attention: the sshpass tool needs to be installed on your server.
# Install on Ubuntu with: sudo apt install sshpass
#
# Copyright 2014 - 2019 Rene Kreijveld - email@renekreijveld.nl
#
# This program is free software; you may redistribute it and/or modify it.
#
# Version history
# 1.0 Initial version

# define variables
# version
version=1.0
# start folder where we start searching
startdir=/home
# calculate the day of week, 0 = sunday, 6 = saturday
dow=$(date +"%w")
# backup file extension
extension=tgz
# storage box server
sbserver=u178213.your-storagebox.de
# storage box user name
sbusername=u178213
# storage box password
sbpasswd=gbxitFoI55n5JBPc
# storage box backup folder where the backup files are copied to
sbfolder=web4

# determine path of script
mypath=$(cd $(dirname ${0}); pwd -P)
myname=$(basename ${0})

# display usage information
usage() {
	echo ""
	echo "${myname} version ${version}, written by Rene Kreijveld."
	echo ""
	echo "Usage: ${myname} [-z] [-s] [-h]"
	echo ""
	echo "-z Zip. Backup to a zipfile instead of a tgzfile."
	echo "-s Silent. Do not display any messages to standard output."
	echo "-h Help. Display this info."
	echo ""
	exit 0
}

# process the arguments
zip="no"
silent="no"
while getopts zsh opt
do
	case "${opt}" in
		z)
			zip="yes"
			extension=zip
			;;
		s)
			silent="yes"
			;;
		h)
			usage
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done

if [ "${silent}" == "no" ]
then
	echo ""
	echo "${myname} version ${version}, written by Rene Kreijveld."
	echo ""
fi

for dir in $(find ${startdir} -maxdepth 4 -type d)
do
	if [ -f ${dir}/configuration.php ]
	then
		# possible joomla found
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` Possible Joomla found at ${dir}."
		fi
		cd ${dir}
		if [ ! -e ${mypath}/jfunctions ]
		then
			echo ""
			echo "Cannot continue: script jfunctions not found."
			echo ""
			exit 1
		fi
		# include general functions
		. ${mypath}/jfunctions

		# create database dump
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` Creating database dump."
		fi
		if mysqldump --skip-opt --add-drop-table --add-locks --create-options --disable-keys --lock-tables --quick --set-charset --host=${host} --user=${dbuser} --password=${password} ${database} > ${database}.sql
		then
			if [ "${silent}" == "no" ]
			then
				echo "`date +"%H:%M:%S"` ${database}.sql created."
			fi
		else
			echo "Error creating database dump."
			exit 1
		fi

		# check if htaccess is present
		if [ -e .htaccess ]
		then
			htaccess=".htaccess"
		else
			htaccess=""
		fi

		# create backup
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` Start backup ${sitenameclean}."
		fi
		if [ "${zip}" == "no" ]
		then
			tar czf ${sitename}.${extension} ${htaccess} *
		else
			zip -q -r ${sitename}.${extension} ${htaccess} *
		fi
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` Backup file ${sitename}.${extension} created."
		fi

		# copy backup to Storage box
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` Copy ${sitename}.${extension} to storage box."
		fi
		sshpass -p "${sbpasswd}" scp ${sitename}.${extension} ${sbusername}@${sbserver}:/${sbfolder}/${dow}
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` File ${sitename}.${extension} copied to storage box."
		fi

		# cleanup backup and database dump
		rm ${database}.sql ${sitename}.${extension}
		if [ "${silent}" == "no" ]
		then
			echo "`date +"%H:%M:%S"` Remote backup for ${sitenameclean} finished."
			echo ""
		fi
	fi
done
